{"ast":null,"code":"import RestAPI from '../rest';\nconst initial = [{\n  id: 1,\n  event_id: 1,\n  customer_id: 1,\n  registration_date: '2019-01-01',\n  notes: 'looking forward to the event'\n}, {\n  id: 2,\n  event_id: 1,\n  customer_id: 2,\n  registration_date: '2019-01-05',\n  notes: 'is parking available?'\n}];\nconst registrations = (state = initial, action, data) => {\n  switch (action.type) {\n    case 'ADD_REGISTRATION':\n      {\n        console.log(\"in reducer registration.ADD_REGISTRATION\");\n        let otherregistrations = state.filter(registration => {\n          if (registration.id === action.registration.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        let newstate = [...otherregistrations, Object.assign({}, action.registration)];\n        console.log(\"in reducer registration.ADD_REGISTRATION, newstate: \" + JSON.stringify(newstate));\n        return newstate;\n      }\n    case 'DELETE_REGISTRATION':\n      {\n        console.log(\"in reducer registrations.DELETE_REGISTRATION\");\n        let otherregistrations = state.filter(registration => {\n          if (registration.id === action.registration.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        let newstate = [...otherregistrations];\n        console.log(\"in reducer registrations.DELETE_REGISTRATION, newstate: \" + JSON.stringify(newstate));\n        return newstate;\n      }\n    case 'GET_REGISTRATIONS':\n      {\n        console.log(\"in reducer registrations.GET_REGISTRATIONS\", state);\n        new RestAPI().getRegistrations(action.dispatch);\n        return state;\n      }\n    case 'APPLY_REGISTRATIONS_UPDATE':\n      {\n        console.log(\"in reducer registrations.APPLY_REGISTRATIONS_UPDATE\", action.registrations);\n        let newstate = [...action.registrations];\n        return newstate;\n      }\n    default:\n      console.log(\"in reducer registration.default\");\n      return state;\n  }\n};\nexport default registrations;","map":{"version":3,"names":["RestAPI","initial","id","event_id","customer_id","registration_date","notes","registrations","state","action","data","type","console","log","otherregistrations","filter","registration","newstate","Object","assign","JSON","stringify","getRegistrations","dispatch"],"sources":["/home/wasadmin/Documents/src/reducers/registrations.js"],"sourcesContent":["import RestAPI from '../rest';\n\n\nconst initial = [\n    { id: 1, event_id: 1, customer_id: 1, registration_date: '2019-01-01', notes: 'looking forward to the event' },\n    { id: 2, event_id: 1, customer_id: 2, registration_date: '2019-01-05', notes: 'is parking available?' }];\n\nconst registrations = (state = initial, action, data) => {\n    switch (action.type) {\n\n        case 'ADD_REGISTRATION': {\n            console.log(\"in reducer registration.ADD_REGISTRATION\");\n            let otherregistrations = state.filter(\n                registration => {\n                    if (registration.id === action.registration.id ) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            );\n            let newstate = [...otherregistrations, Object.assign({}, action.registration)]\n            console.log(\"in reducer registration.ADD_REGISTRATION, newstate: \" + JSON.stringify(newstate));\n            return newstate;\n        }\n\n        case 'DELETE_REGISTRATION': {\n            console.log(\"in reducer registrations.DELETE_REGISTRATION\");\n            let otherregistrations = state.filter(\n                (registration) => {\n                    if (registration.id === action.registration.id ) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            );\n            let newstate = [...otherregistrations]\n            console.log(\"in reducer registrations.DELETE_REGISTRATION, newstate: \" + JSON.stringify(newstate));\n            return newstate;\n        }\n\n        case 'GET_REGISTRATIONS': {\n            console.log(\"in reducer registrations.GET_REGISTRATIONS\", state);\n            new RestAPI().getRegistrations(action.dispatch);\n            return state;\n        }\n\n        case 'APPLY_REGISTRATIONS_UPDATE': {\n            console.log(\"in reducer registrations.APPLY_REGISTRATIONS_UPDATE\", action.registrations);\n            let newstate = [...action.registrations];\n            return newstate;\n        }\n\n        default:\n            console.log(\"in reducer registration.default\");\n            return state\n    }\n}\n\nexport default registrations"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAG7B,MAAMC,OAAO,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,CAAC;EAAEC,WAAW,EAAE,CAAC;EAAEC,iBAAiB,EAAE,YAAY;EAAEC,KAAK,EAAE;AAA+B,CAAC,EAC9G;EAAEJ,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,CAAC;EAAEC,WAAW,EAAE,CAAC;EAAEC,iBAAiB,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAwB,CAAC,CAAC;AAE5G,MAAMC,aAAa,GAAGA,CAACC,KAAK,GAAGP,OAAO,EAAEQ,MAAM,EAAEC,IAAI,KAAK;EACrD,QAAQD,MAAM,CAACE,IAAI;IAEf,KAAK,kBAAkB;MAAE;QACrBC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;QACvD,IAAIC,kBAAkB,GAAGN,KAAK,CAACO,MAAM,CACjCC,YAAY,IAAI;UACZ,IAAIA,YAAY,CAACd,EAAE,KAAKO,MAAM,CAACO,YAAY,CAACd,EAAE,EAAG;YAC7C,OAAO,KAAK;UAChB,CAAC,MAAM;YACH,OAAO,IAAI;UACf;QACJ,CACJ,CAAC;QACD,IAAIe,QAAQ,GAAG,CAAC,GAAGH,kBAAkB,EAAEI,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEV,MAAM,CAACO,YAAY,CAAC,CAAC;QAC9EJ,OAAO,CAACC,GAAG,CAAC,sDAAsD,GAAGO,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;QAC9F,OAAOA,QAAQ;MACnB;IAEA,KAAK,qBAAqB;MAAE;QACxBL,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;QAC3D,IAAIC,kBAAkB,GAAGN,KAAK,CAACO,MAAM,CAChCC,YAAY,IAAK;UACd,IAAIA,YAAY,CAACd,EAAE,KAAKO,MAAM,CAACO,YAAY,CAACd,EAAE,EAAG;YAC7C,OAAO,KAAK;UAChB,CAAC,MAAM;YACH,OAAO,IAAI;UACf;QACJ,CACJ,CAAC;QACD,IAAIe,QAAQ,GAAG,CAAC,GAAGH,kBAAkB,CAAC;QACtCF,OAAO,CAACC,GAAG,CAAC,0DAA0D,GAAGO,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;QAClG,OAAOA,QAAQ;MACnB;IAEA,KAAK,mBAAmB;MAAE;QACtBL,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEL,KAAK,CAAC;QAChE,IAAIR,OAAO,CAAC,CAAC,CAACsB,gBAAgB,CAACb,MAAM,CAACc,QAAQ,CAAC;QAC/C,OAAOf,KAAK;MAChB;IAEA,KAAK,4BAA4B;MAAE;QAC/BI,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAEJ,MAAM,CAACF,aAAa,CAAC;QACxF,IAAIU,QAAQ,GAAG,CAAC,GAAGR,MAAM,CAACF,aAAa,CAAC;QACxC,OAAOU,QAAQ;MACnB;IAEA;MACIL,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9C,OAAOL,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}