{"ast":null,"code":"import RestAPI from '../rest';\nconst initial = [{\n  id: 100,\n  name: 'Brian',\n  email: 'brian@a.com'\n}, {\n  id: 101,\n  name: 'Scott',\n  email: 'scott@a.com'\n}, {\n  id: 102,\n  name: 'Jeff',\n  email: 'jeff@a.com'\n}];\nconst customers = (state = initial, action, data) => {\n  switch (action.type) {\n    case 'ADD_CUSTOMER':\n      {\n        console.log(\"in reducer customer.ADD_CUSTOMER\");\n        let othercustomers = state.filter(customer => {\n          if (customer.id === action.customer.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        let newstate = [...othercustomers, Object.assign({}, action.customer)];\n        console.log(\"in reducer customer.ADD_CUSTOMER, newstate: \" + JSON.stringify(newstate));\n        return newstate;\n      }\n    case 'DELETE_CUSTOMER':\n      {\n        console.log(\"in reducer customers.DELETE_CUSTOMER\");\n        let othercustomers = state.filter(customer => {\n          if (customer.id === action.customer.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        let newstate = [...othercustomers];\n        console.log(\"in reducer customers.DELETE_CUSTOMER, newstate: \" + JSON.stringify(newstate));\n        return newstate;\n      }\n    case 'APPLY_CUSTOMERS_UPDATE':\n      {\n        console.log(\"in reducer customers.APPLY_CUSTOMERS_UPDATE\", action.customers);\n        let newstate = [...action.customers];\n        return newstate;\n      }\n    case 'GET_CUSTOMERS':\n      {\n        console.log(\"in reducer customers.GET_CUSTOMERS\", state);\n        new RestAPI().getCustomers(action.dispatch);\n        return state;\n      }\n    default:\n      console.log(\"in reducer customer.default\");\n      return state;\n  }\n};\nexport default customers;","map":{"version":3,"names":["RestAPI","initial","id","name","email","customers","state","action","data","type","console","log","othercustomers","filter","customer","newstate","Object","assign","JSON","stringify","getCustomers","dispatch"],"sources":["/home/wasadmin/LabFiles/MsdProject/projectday2/project-react-client-crud/src/reducers/customers.js"],"sourcesContent":["import RestAPI from '../rest';\n\nconst initial = [{ id: 100, name: 'Brian', email: 'brian@a.com' },\n{ id: 101, name: 'Scott', email: 'scott@a.com' },\n{ id: 102, name: 'Jeff', email: 'jeff@a.com' }];\n\nconst customers = (state = initial, action, data) => {\n    switch (action.type) {\n\n        case 'ADD_CUSTOMER': {\n            console.log(\"in reducer customer.ADD_CUSTOMER\");\n            let othercustomers = state.filter(\n                customer => {\n                    if (customer.id === action.customer.id ) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            );\n            let newstate = [...othercustomers, Object.assign({}, action.customer)]\n            console.log(\"in reducer customer.ADD_CUSTOMER, newstate: \" + JSON.stringify(newstate));\n            return newstate;\n        }\n\n        case 'DELETE_CUSTOMER': {\n            console.log(\"in reducer customers.DELETE_CUSTOMER\");\n            let othercustomers = state.filter(\n                (customer) => {\n                    if (customer.id === action.customer.id ) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            );\n            let newstate = [...othercustomers]\n            console.log(\"in reducer customers.DELETE_CUSTOMER, newstate: \" + JSON.stringify(newstate));\n            return newstate;\n        }\n\n        case 'APPLY_CUSTOMERS_UPDATE': {\n            console.log(\"in reducer customers.APPLY_CUSTOMERS_UPDATE\", action.customers);\n            let newstate = [...action.customers];\n            return newstate;\n        }\n\n        case 'GET_CUSTOMERS': {\n            console.log(\"in reducer customers.GET_CUSTOMERS\", state);\n            new RestAPI().getCustomers(action.dispatch);\n            return state;\n        }\n\n        default:\n            console.log(\"in reducer customer.default\");\n            return state\n    }\n}\n\nexport default customers"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAE7B,MAAMC,OAAO,GAAG,CAAC;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAc,CAAC,EACjE;EAAEF,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAc,CAAC,EAChD;EAAEF,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAa,CAAC,CAAC;AAE/C,MAAMC,SAAS,GAAGA,CAACC,KAAK,GAAGL,OAAO,EAAEM,MAAM,EAAEC,IAAI,KAAK;EACjD,QAAQD,MAAM,CAACE,IAAI;IAEf,KAAK,cAAc;MAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/C,IAAIC,cAAc,GAAGN,KAAK,CAACO,MAAM,CAC7BC,QAAQ,IAAI;UACR,IAAIA,QAAQ,CAACZ,EAAE,KAAKK,MAAM,CAACO,QAAQ,CAACZ,EAAE,EAAG;YACrC,OAAO,KAAK;UAChB,CAAC,MAAM;YACH,OAAO,IAAI;UACf;QACJ,CACJ,CAAC;QACD,IAAIa,QAAQ,GAAG,CAAC,GAAGH,cAAc,EAAEI,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEV,MAAM,CAACO,QAAQ,CAAC,CAAC;QACtEJ,OAAO,CAACC,GAAG,CAAC,8CAA8C,GAAGO,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;QACtF,OAAOA,QAAQ;MACnB;IAEA,KAAK,iBAAiB;MAAE;QACpBL,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;QACnD,IAAIC,cAAc,GAAGN,KAAK,CAACO,MAAM,CAC5BC,QAAQ,IAAK;UACV,IAAIA,QAAQ,CAACZ,EAAE,KAAKK,MAAM,CAACO,QAAQ,CAACZ,EAAE,EAAG;YACrC,OAAO,KAAK;UAChB,CAAC,MAAM;YACH,OAAO,IAAI;UACf;QACJ,CACJ,CAAC;QACD,IAAIa,QAAQ,GAAG,CAAC,GAAGH,cAAc,CAAC;QAClCF,OAAO,CAACC,GAAG,CAAC,kDAAkD,GAAGO,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;QAC1F,OAAOA,QAAQ;MACnB;IAEA,KAAK,wBAAwB;MAAE;QAC3BL,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEJ,MAAM,CAACF,SAAS,CAAC;QAC5E,IAAIU,QAAQ,GAAG,CAAC,GAAGR,MAAM,CAACF,SAAS,CAAC;QACpC,OAAOU,QAAQ;MACnB;IAEA,KAAK,eAAe;MAAE;QAClBL,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEL,KAAK,CAAC;QACxD,IAAIN,OAAO,CAAC,CAAC,CAACoB,YAAY,CAACb,MAAM,CAACc,QAAQ,CAAC;QAC3C,OAAOf,KAAK;MAChB;IAEA;MACII,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,OAAOL,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}