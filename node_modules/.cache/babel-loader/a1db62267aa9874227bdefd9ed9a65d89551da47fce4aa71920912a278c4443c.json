{"ast":null,"code":"/* Login Actions */\nexport const updateLoginFormObject = (field_name, field_value) => {\n  return {\n    type: 'UPDATE_LOGIN_FORM_OBJECT',\n    field_name: field_name,\n    field_value: field_value\n  };\n};\nexport const setRegistrationMode = () => {\n  return {\n    type: 'SET_REGISTRATION_MODE'\n  };\n};\nexport const registerUser = (dispatch, username, password, email) => {\n  return {\n    type: 'REGISTER_USER',\n    dispatch,\n    username,\n    password,\n    email\n  };\n};\nexport const loginToApp = (dispatch, username, password, loginstate) => {\n  return {\n    type: 'LOGIN_TO_APP',\n    dispatch,\n    username,\n    password,\n    loginstate\n  };\n};\nexport const logOut = dispatch => {\n  return {\n    type: 'LOG_OUT',\n    dispatch\n  };\n};\nexport const getJWTToken = (dispatch, username, password) => {\n  return {\n    type: 'GET_JWT_TOKEN',\n    dispatch,\n    username,\n    password\n  };\n};\nexport const loginSucceeded = token => {\n  return {\n    type: 'LOGIN_SUCCESS',\n    token\n  };\n};\nexport const loginFailed = () => {\n  return {\n    type: 'LOGIN_FAILED'\n  };\n};\n\n/* REGISTRATION ACTIONS */\nexport const applyRegistrationsUpdate = registrations => {\n  return {\n    type: 'APPLY_REGISTRATIONS_UPDATE',\n    registrations\n  };\n};\nexport const selectRegistration = registration => {\n  return {\n    type: 'SELECT_REGISTRATION',\n    registration\n  };\n};\nexport const addRegistration = registration => {\n  return {\n    type: 'ADD_REGISTRATION',\n    registration\n  };\n};\nexport const getRegistrations = dispatch => {\n  return {\n    type: 'GET_REGISTRATIONS',\n    dispatch\n  };\n};\nexport const deleteRegistration = registration => {\n  return {\n    type: 'DELETE_REGISTRATION',\n    registration\n  };\n};\nexport const addRegistrationInit = registration => {\n  return {\n    type: 'ADD_REGISTRATION_INIT',\n    registration\n  };\n};\nexport const updateRegistrationFormObject = (field_name, field_value) => {\n  return {\n    type: 'UPDATE_REGISTRATION_FORM_OBJECT',\n    field_name: field_name,\n    field_value: field_value\n  };\n};\n\n// accepted values for usage: 'view', 'add', 'update'\nexport const updateRegistrationFormUsage = (usage, registration) => {\n  return {\n    type: 'UPDATE_REGISTRATION_FORM_USAGE',\n    usage: usage,\n    registration: registration\n  };\n};\n\n/* EVENT ACTIONS */\nexport const applyEventsUpdate = events => {\n  return {\n    type: 'APPLY_EVENTS_UPDATE',\n    events\n  };\n};\nexport const selectEvent = event => {\n  return {\n    type: 'SELECT_EVENT',\n    event\n  };\n};\nexport const addEvent = event => {\n  return {\n    type: 'ADD_EVENT',\n    event\n  };\n};\nexport const getEvents = dispatch => {\n  return {\n    type: 'GET_EVENTS',\n    dispatch\n  };\n};\nexport const deleteEvent = event => {\n  return {\n    type: 'DELETE_EVENT',\n    event\n  };\n};\nexport const addEventInit = event => {\n  return {\n    type: 'ADD_EVENT_INIT',\n    event\n  };\n};\nexport const updateEventFormObject = (field_name, field_value) => {\n  return {\n    type: 'UPDATE_EVENT_FORM_OBJECT',\n    field_name: field_name,\n    field_value: field_value\n  };\n};\n\n// accepted values for usage: 'view', 'add', 'update'\nexport const updateEventFormUsage = (usage, event) => {\n  return {\n    type: 'UPDATE_EVENT_FORM_USAGE',\n    usage: usage,\n    event: event\n  };\n};\n\n/* CUSTOMER ACTIONS */\nexport const applyCustomersUpdate = customers => {\n  return {\n    type: 'APPLY_CUSTOMERS_UPDATE',\n    customers\n  };\n};\nexport const selectCustomer = customer => {\n  return {\n    type: 'SELECT_CUSTOMER',\n    customer\n  };\n};\nexport const addCustomer = customer => {\n  return {\n    type: 'ADD_CUSTOMER',\n    customer\n  };\n};\nexport const getCustomers = dispatch => {\n  return {\n    type: 'GET_CUSTOMERS',\n    dispatch\n  };\n};\nexport const deleteCustomer = customer => {\n  return {\n    type: 'DELETE_CUSTOMER',\n    customer\n  };\n};\nexport const addCustomerInit = customer => {\n  return {\n    type: 'ADD_CUSTOMER_INIT',\n    customer\n  };\n};\nexport const updateCustomerFormObject = (field_name, field_value) => {\n  return {\n    type: 'UPDATE_CUSTOMER_FORM_OBJECT',\n    field_name: field_name,\n    field_value: field_value\n  };\n};\n\n// accepted values for usage: 'view', 'add', 'update'\nexport const updateCustomerFormUsage = (usage, customer) => {\n  return {\n    type: 'UPDATE_CUSTOMER_FORM_USAGE',\n    usage: usage,\n    customer: customer\n  };\n};","map":{"version":3,"names":["updateLoginFormObject","field_name","field_value","type","setRegistrationMode","registerUser","dispatch","username","password","email","loginToApp","loginstate","logOut","getJWTToken","loginSucceeded","token","loginFailed","applyRegistrationsUpdate","registrations","selectRegistration","registration","addRegistration","getRegistrations","deleteRegistration","addRegistrationInit","updateRegistrationFormObject","updateRegistrationFormUsage","usage","applyEventsUpdate","events","selectEvent","event","addEvent","getEvents","deleteEvent","addEventInit","updateEventFormObject","updateEventFormUsage","applyCustomersUpdate","customers","selectCustomer","customer","addCustomer","getCustomers","deleteCustomer","addCustomerInit","updateCustomerFormObject","updateCustomerFormUsage"],"sources":["/home/wasadmin/LabFiles/MsdProject/projectday2/project-react-client-crud (copy)/src/actions/index.js"],"sourcesContent":["/* Login Actions */\r\nexport const updateLoginFormObject = (field_name, field_value) => {\r\n  return {\r\n  type: 'UPDATE_LOGIN_FORM_OBJECT',\r\n  field_name:field_name,\r\n  field_value:field_value\r\n  }\r\n}\r\n\r\nexport const setRegistrationMode = () => {\r\n  return {\r\n    type: 'SET_REGISTRATION_MODE'\r\n  }\r\n}\r\n\r\nexport const registerUser = (dispatch, username, password, email) => {\r\n  return {\r\n    type: 'REGISTER_USER',\r\n    dispatch,\r\n    username,\r\n    password,\r\n    email\r\n  }\r\n}\r\n\r\nexport const loginToApp = (dispatch, username, password, loginstate) => {\r\n  return {\r\n  type: 'LOGIN_TO_APP',\r\n  dispatch, username, password, loginstate\r\n  }\r\n} \r\n\r\nexport const logOut = (dispatch) => {\r\n  return {\r\n  type: 'LOG_OUT',\r\n  dispatch\r\n  }\r\n} \r\n\r\nexport const getJWTToken = (dispatch, username, password) => {\r\n  return {\r\n  type: 'GET_JWT_TOKEN',\r\n  dispatch, \r\n  username, \r\n  password\r\n  }\r\n}\r\n\r\n\r\nexport const loginSucceeded = (token) => {\r\n  return {\r\n  type: 'LOGIN_SUCCESS',\r\n  token\r\n  }\r\n}\r\n\r\n\r\nexport const loginFailed = () => {\r\n  return {\r\n  type: 'LOGIN_FAILED'\r\n  }\r\n}\r\n\r\n/* REGISTRATION ACTIONS */\r\nexport const applyRegistrationsUpdate = (registrations) => {\r\n  return {\r\n    type: 'APPLY_REGISTRATIONS_UPDATE',\r\n    registrations\r\n  }\r\n}\r\n\r\nexport const selectRegistration = (registration) => {\r\n  return {\r\n  type: 'SELECT_REGISTRATION',\r\n  registration\r\n  }\r\n} \r\n\r\nexport const addRegistration = (registration) => {\r\n  return {\r\n  type: 'ADD_REGISTRATION',\r\n  registration\r\n  }\r\n}\r\n\r\nexport const getRegistrations = (dispatch) => {\r\n  return {\r\n  type: 'GET_REGISTRATIONS',\r\n  dispatch\r\n  }\r\n}\r\n\r\nexport const deleteRegistration = (registration) => {\r\n  return {\r\n  type: 'DELETE_REGISTRATION',\r\n  registration\r\n  }\r\n}\r\n\r\nexport const addRegistrationInit = (registration) => {\r\n  return {\r\n    type: 'ADD_REGISTRATION_INIT',\r\n    registration\r\n  }\r\n}\r\n\r\nexport const updateRegistrationFormObject = (field_name, field_value) => {\r\n  return {\r\n  type: 'UPDATE_REGISTRATION_FORM_OBJECT',\r\n  field_name:field_name,\r\n  field_value:field_value\r\n  }\r\n}\r\n\r\n// accepted values for usage: 'view', 'add', 'update'\r\nexport const updateRegistrationFormUsage = (usage, registration) => {\r\n  return {\r\n    type: 'UPDATE_REGISTRATION_FORM_USAGE',\r\n    usage: usage,\r\n    registration: registration\r\n  }\r\n}\r\n\r\n\r\n/* EVENT ACTIONS */\r\nexport const applyEventsUpdate = (events) => {\r\n  return {\r\n    type: 'APPLY_EVENTS_UPDATE',\r\n    events\r\n  }\r\n}\r\n\r\nexport const selectEvent = (event) => {\r\n  return {\r\n  type: 'SELECT_EVENT',\r\n  event\r\n  }\r\n} \r\n\r\nexport const addEvent = (event) => {\r\n  return {\r\n  type: 'ADD_EVENT',\r\n  event\r\n  }\r\n}\r\n\r\nexport const getEvents = (dispatch) => {\r\n  return {\r\n  type: 'GET_EVENTS',\r\n  dispatch\r\n  }\r\n}\r\n\r\nexport const deleteEvent = (event) => {\r\n  return {\r\n  type: 'DELETE_EVENT',\r\n  event\r\n  }\r\n}\r\n\r\nexport const addEventInit = (event) => {\r\n  return {\r\n    type: 'ADD_EVENT_INIT',\r\n    event\r\n  }\r\n}\r\n\r\nexport const updateEventFormObject = (field_name, field_value) => {\r\n  return {\r\n  type: 'UPDATE_EVENT_FORM_OBJECT',\r\n  field_name:field_name,\r\n  field_value:field_value\r\n  }\r\n}\r\n\r\n// accepted values for usage: 'view', 'add', 'update'\r\nexport const updateEventFormUsage = (usage, event) => {\r\n  return {\r\n    type: 'UPDATE_EVENT_FORM_USAGE',\r\n    usage: usage,\r\n    event: event\r\n  }\r\n}\r\n\r\n\r\n/* CUSTOMER ACTIONS */\r\nexport const applyCustomersUpdate = (customers) => {\r\n  return {\r\n    type: 'APPLY_CUSTOMERS_UPDATE',\r\n    customers\r\n  }\r\n}\r\n\r\nexport const selectCustomer = (customer) => {\r\n  return {\r\n  type: 'SELECT_CUSTOMER',\r\n  customer\r\n  }\r\n} \r\n\r\nexport const addCustomer = (customer) => {\r\n  return {\r\n  type: 'ADD_CUSTOMER',\r\n  customer\r\n  }\r\n}\r\n\r\nexport const getCustomers = (dispatch) => {\r\n  return {\r\n  type: 'GET_CUSTOMERS',\r\n  dispatch\r\n  }\r\n}\r\n\r\nexport const deleteCustomer = (customer) => {\r\n  return {\r\n  type: 'DELETE_CUSTOMER',\r\n  customer\r\n  }\r\n}\r\n\r\nexport const addCustomerInit = (customer) => {\r\n  return {\r\n    type: 'ADD_CUSTOMER_INIT',\r\n    customer\r\n  }\r\n}\r\n\r\nexport const updateCustomerFormObject = (field_name, field_value) => {\r\n  return {\r\n  type: 'UPDATE_CUSTOMER_FORM_OBJECT',\r\n  field_name:field_name,\r\n  field_value:field_value\r\n  }\r\n}\r\n\r\n// accepted values for usage: 'view', 'add', 'update'\r\nexport const updateCustomerFormUsage = (usage, customer) => {\r\n  return {\r\n    type: 'UPDATE_CUSTOMER_FORM_USAGE',\r\n    usage: usage,\r\n    customer: customer\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}